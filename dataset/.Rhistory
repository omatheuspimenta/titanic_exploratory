rescale_eigen = rescale_eigen,
n = vertex,
Bline_eigen = Bline_eigen)
temp_ecsd_rbind <- rbind(temp_ecsd_rbind, temp_ecsd[[iter]])
}
assign(name_adj, temp_adj)
remove(temp_adj, s_erdp)
assign(name_adj_comp, temp_adj_comp)
remove(temp_adj_comp, scam_erdp, ones_erdp, cam_erdp)
assign(name_lap, temp_lap)
remove(temp_lap, sl_erdp, lm_erdp)
assign(name_lapn, temp_lapn)
remove(temp_lapn, sln_erdp, lmn_erdp)
assign(name_dens, temp_density)
remove(temp_density, name_dens)
assign(name_Bline, temp_Bline)
assign(name_B_eigen, temp_B_eigen)
assign(name_B_eigen_resc, temp_B_eigen_resc)
assign(name_ecsd, temp_ecsd)
temp_ecsd_rbind<-temp_ecsd_rbind[rowSums(is.na(temp_ecsd_rbind)) != ncol(temp_ecsd_rbind),]
assign(name_ecsd_rbind, temp_ecsd_rbind)
remove(Bline, Bline_eigen, temp_Bline, absolute_eigen, log_base, temp_B_eigen,
temp_B_eigen_resc, temp_ecsd, temp_ecsd_rbind)
}
}
remove(g_erdp, iter, n_vertex, max_iter, p, name_adj,
name_adj_comp, name_lap, name_lapn, prob, vertex,
name_Bline, name_B_eigen, name_B_eigen_resc,
rescale_eigen, createBline, ecsd, name_ecsd,
name_ecsd_rbind, create_interval, r_int, pi_int,
numCores, npoints, length_int)
View(Bline)
View(er_B_eigenReal_n_100_p_0.1)
x <- c(4,5,3,6,7,8,4)
t <- t.test(x, mu=3, alternative = "greater")
plot(t)
t
plot(cars)
plot(cars)
plot(cars)
plot(cars)
load("/dataset/titanic3.sav")
load("../dataset/titanic3.sav")
load("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/titanic3.sav")
setwd("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/")
---
title: "Análise Exploratória - Titanic"
output: html_notebook
editor_options:
chunk_output_type: inline
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
---
c
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
load("titanic3.sav")
summary(titanic3)
head(titanic3)
load("titanic2.sav")
View(titanic3)
View(titanic2)
load("titanic1.sav")
load("titanic.sav")
View(titanic)
View(titanic3)
remove(titanic, titanic2)
plsmo(age, survived, group=sex, datadensity=T) # or group=pclass
plot(naclus(titanic3)) # study patterns of missing values
summary(survived ~ age + sex + pclass + sibsp + parch, data=titanic3)
load("titanic3.sav")
# Summary
```{r}
head(titanic3)
```
Explicações sobre as colunas do dataset [titanic3](https://hbiostat.org/data/repo/titanic.html):
* **pclass**: Tipo de classe que o passageiro estava. 1 é a primeira classe e 3 é a pior classe.
* **survived**: Informa se o passageiro sobreviveu (1) ou não (0).
* **name**: Nome do passageiro.
* **sex**: Sexo do passageiro, masculino ou feminino.
* **age**: Idade do passageiro.
---
title: "Análise Exploratória - Titanic"
output: html_notebook
editor_options:
chunk_output_type: inline
---
```{r, setup, include=FALSE}
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
```
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
load("titanic3.sav")
head(titanic3)
# Load dataset
```{r}
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
load("titanic3.sav")
head(titanic3)
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
load("titanic3.sav")
knitr::opts_knit$set(root.dir = normalizePath("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/"))
head(titanic3)
dim(titanic3)
summary(titanic3)
str(titanic3)
sapply(titanic3, class)
sapply(titanic3, typeof)
print(sapply(titanic3, typeof))
print(sapply(titanic3, class))
print(sapply(titanic3, typeof))
print("Classes:")
print(sapply(titanic3, class))
print("Classes:")
print(sapply(titanic3, typeof))
describe(titanic3)
library("Hmisc")
describe(titanic3)
describe(titanic3)
#####
# Set path
setwd("/home/matheus/Dropbox/06_doutorado/2021_01/Bioestatistica/projeto/dataset/")
#####
# Libraries
library("Hmisc") #for describe
library("stringr") #for string manipulation
library("ggplot2") #for graphics
library("dplyr") #for summary
library("plyr") #for count
library("boot") #for bootstrap
#####
# Load file
load("titanic3.sav")
# 745      564      368
#
# lowest : ?Havana, Cuba                   Aberdeen / Portland, OR         Albany, NY                      Altdorf, Switzerland            Amenia, ND
# highest: Worcester, England              Worcester, MA                   Yoevil, England / Cottage Grove Youngstown, OH                  Zurich, Switzerland
# --------------------------------------------------------------------------------------------------------
#####
# Now, we will see column by column to find "gold information"
# The columns "pclass" and "survived" do not have any "new" information until here.
# In the column "name" we can extract the "Mr", "Mrs",... of the observation
# and copy to a new column "title"
titanic3$title <- str_split_fixed(titanic3$name, " ",3)[,2]
# Extracting the last name for other analysis
titanic3$lastname <- str_split_fixed(titanic3$name, " ",3)[,1]
# Input the new values in NA using the bootstrap strategy
f <- function(x,i){
xx<-x[i]
return(mean(xx, na.rm=TRUE))
}
R <- 1000 # use 10000 if need
pclass <- c("1st", "2nd", "3rd")
i_1 <- which(is.na(titanic3[titanic3$pclass=="1st",]$age))
i_2 <- 323 + which(is.na(titanic3[titanic3$pclass=="2nd",]$age))
i_3 <- 600 + which(is.na(titanic3[titanic3$pclass=="3rd",]$age))
for (c in pclass){
if(c=="1st"){
for(i in i_1){ # because the dataset is ordered
input <- titanic3[titanic3$pclass==c,]$age
if(is.na(titanic3$age[i])){
b <- boot(input, f, R=R)
if(mean(b$t) < 1){
output <- mean(b$t)
}else{
output <- round(mean(b$t))
}
titanic3$age[i] <- output
}
}
}
if(c=="2nd"){
for(i in i_2){ # because the dataset is ordered
input <- titanic3[titanic3$pclass==c,]$age
if(is.na(titanic3$age[i])){
b <- boot(input, f, R=R)
if(mean(b$t) < 1){
output <- mean(b$t)
}else{
output <- round(mean(b$t))
}
titanic3$age[i] <- output
}
}
}
if(c=="3rd"){
for(i in i_3){ # because the dataset is ordered
input <- titanic3[titanic3$pclass==c,]$age
if(is.na(titanic3$age[i])){
b <- boot(input, f, R=R)
if(mean(b$t) < 1){
output <- mean(b$t)
}else{
output <- round(mean(b$t))
}
titanic3$age[i] <- output
}
}
}
}
# remove temp variables
remove(c,i,input,output,pclass,R,f,b,i_1,i_2,i_3)
# Replacing the value using the bootstrap strategy. How the NA values
# are in the "3rd" class, we assume the mean by class.
f <- function(x,i){
xx<-x[i]
return(mean(xx, na.rm=TRUE))
}
R <- 1000 # use 10000 if need
input <- titanic3[titanic3$pclass=="3rd",]$fare
b <- boot(input, f, R=R)
i <- which(is.na(titanic3$fare))
titanic3$fare[i] <- mean(b$t)
#remove temp variables
remove(f,R,input,b,i)
# In the column "cabin" we can't impute the NA information yet.
# One way to do this is to associate the last name with the cabin,
# but that information isn't available.
# The column "embarked" has 2 NA values. Let's see.
i_n<-which(is.na(titanic3$embarked))
titanic3[which(is.na(titanic3$embarked)),]
# The 2 values belong to the "1st" class.
t<-table(titanic3$embarked,titanic3$pclass)
c<-prop.table(t[,1])
x<-c("Cherbourg", "Queenstown", "Southampton")
# The frequency of "Cherbourg" and "Southamptom" is very close.
# Input new values in NA
for (i in i_n){
titanic3$embarked[i]<-sample(x,1,prob = c)
}
remove(i_n,t,c,x,i)
# In the columns "boat", "body" and, "home.dest" we will not explore yet.
# Two new columns will be creating: "mom" and "nfamily".
# nfamily represents the number of relatives
# number of siblings + number of parents + 1 (the observation)
titanic3$nfamily <- titanic3$sibsp + titanic3$parch + 1
# mom represents if the woman is mom or not, to create only if the age > 18 and
# parch > 1
titanic3$mom <- ifelse((titanic3$sex=="female" & titanic3$parch>=1 & titanic3$age > 18), 1, 0)
#####
describe(titanic3)
# save the file
save.image("titanic3.RData")
#####
# Load file
load("titanic3.RData")
#####
# Extracting some information about the data
# comparing by classes
# survived by class
tapply(titanic3$survived, titanic3$pclass, sum)
# select subset from dataframe
df_cor <- select(titanic3, class, survived, age, fare, nfamily, mom)
# select subset from dataframe
titanic3$class <- ifelse(titanic3$pclass=="1st",1,ifelse(titanic3$pclass=="2nd",2,ifelse(titanic3$pclass=="3rd",3,0)))
df_cor <- select(titanic3, class, survived, age, fare, nfamily, mom)
View(df_cor)
# correlation matrix
cormat <- round(cor(df_cor),2)
# correlation tests (if necessary)
cor.test(df_cor$class,df_cor$fare, method = "pearson")
#####
# HT - Wilcoxon Test
#H0: \mu1 = \mu2
#H1: \mu1 \neq \mu2
# split dataframe
class1 <- titanic3[titanic3$pclass == "1st",]
class2 <- titanic3[titanic3$pclass == "2nd",]
class3 <- titanic3[titanic3$pclass == "3rd",]
# Wilcoxon rank sum test with continuity correction
# data:  class3$fare and class1$fare
# W = 12184, p-value < 2.2e-16
# alternative hypothesis: true location shift is not equal to 0
# Thus, \mu1 \neq \mu2, p-value < 0.05 (alpha)
# We have evidence that all positions measures for the fare
# in the populations are different based  in the wilcox.test
remove(wt_fare12, wt_fare23, wt_fare31)
remove(class1, class2, class3)
# Pearson's product-moment correlation
# data:  df_cor$class and df_cor$fare
# t = -24.353, df = 1307, p-value < 2.2e-16
# alternative hypothesis: true correlation is not equal to 0
# 95 percent confidence interval:
#  -0.5948682 -0.5202611
# sample estimates:
#        cor
# -0.5586939
# remove temp variables
remove(df_cor)
#remove temp variables
remove(ggheatmap, cormat, cormat_melted)
#####
# Load file
load("titanic3.RData")
#####
# Creating dummy variables for "pclass", "sex", "sibsp", "parch", "embarked", "age"
# and, "nfamily"
# using the base R
# pclass dummy
titanic3$pclass1st <- ifelse(titanic3$pclass=="1st",1,0)
titanic3$pclass2nd <- ifelse(titanic3$pclass=="2nd",1,0)
titanic3$pclass3rd <- ifelse(titanic3$pclass=="3rd",1,0)
# sex dummy
titanic3$female <- ifelse(titanic3$sex=="female",1,0)
titanic3$male <- ifelse(titanic3$sex=="male",1,0)
# sibsp dummy
titanic3$sibsp0 <- ifelse(titanic3$sibsp==0,1,0)
titanic3$sibsp1 <- ifelse(titanic3$sibsp==1,1,0)
titanic3$sibsp2 <- ifelse(titanic3$sibsp==2,1,0)
titanic3$sibsp3 <- ifelse(titanic3$sibsp==3,1,0)
titanic3$sibsp4 <- ifelse(titanic3$sibsp==4,1,0)
titanic3$sibsp5 <- ifelse(titanic3$sibsp==5,1,0)
titanic3$sibsp8 <- ifelse(titanic3$sibsp==8,1,0)
# parch dummy
titanic3$parch0 <- ifelse(titanic3$parch==0,1,0)
titanic3$parch1 <- ifelse(titanic3$parch==1,1,0)
titanic3$parch2 <- ifelse(titanic3$parch==2,1,0)
titanic3$parch3 <- ifelse(titanic3$parch==3,1,0)
titanic3$parch4 <- ifelse(titanic3$parch==4,1,0)
titanic3$parch5 <- ifelse(titanic3$parch==5,1,0)
titanic3$parch6 <- ifelse(titanic3$parch==6,1,0)
titanic3$parch9 <- ifelse(titanic3$parch==9,1,0)
# embarked dummy
titanic3$Cherbourg <- ifelse(titanic3$embarked == "Cherbourg",1,0)
titanic3$Queenstown <- ifelse(titanic3$embarked == "Queenstown",1,0)
titanic3$Southampton <- ifelse(titanic3$embarked == "Southampton",1,0)
# age dummy
titanic3$children <- ifelse(titanic3$age<=11, 1, 0)
titanic3$teenage <- ifelse((titanic3$age>11 & titanic3$age<20), 1, 0)
titanic3$young <- ifelse((titanic3$age>20 & titanic3$age<30), 1, 0)
titanic3$adult <- ifelse((titanic3$age>30 & titanic3$age<60), 1, 0)
titanic3$old <- ifelse(titanic3$age>60, 1, 0)
#####
# Load file
load("titanic3.RData")
#####
# Creating dummy variables for "pclass", "sex", "sibsp", "parch", "embarked", "age"
# and, "nfamily"
# using the base R
# pclass dummy
titanic3$pclass1st <- ifelse(titanic3$pclass=="1st",1,0)
titanic3$pclass2nd <- ifelse(titanic3$pclass=="2nd",1,0)
titanic3$pclass3rd <- ifelse(titanic3$pclass=="3rd",1,0)
# sex dummy
titanic3$female <- ifelse(titanic3$sex=="female",1,0)
titanic3$male <- ifelse(titanic3$sex=="male",1,0)
# sibsp dummy
titanic3$sibsp0 <- ifelse(titanic3$sibsp==0,1,0)
titanic3$sibsp1 <- ifelse(titanic3$sibsp==1,1,0)
titanic3$sibsp2 <- ifelse(titanic3$sibsp==2,1,0)
titanic3$sibsp3 <- ifelse(titanic3$sibsp==3,1,0)
titanic3$sibsp4 <- ifelse(titanic3$sibsp==4,1,0)
titanic3$sibsp5 <- ifelse(titanic3$sibsp==5,1,0)
titanic3$sibsp8 <- ifelse(titanic3$sibsp==8,1,0)
# parch dummy
titanic3$parch0 <- ifelse(titanic3$parch==0,1,0)
titanic3$parch1 <- ifelse(titanic3$parch==1,1,0)
titanic3$parch2 <- ifelse(titanic3$parch==2,1,0)
titanic3$parch3 <- ifelse(titanic3$parch==3,1,0)
titanic3$parch4 <- ifelse(titanic3$parch==4,1,0)
titanic3$parch5 <- ifelse(titanic3$parch==5,1,0)
titanic3$parch6 <- ifelse(titanic3$parch==6,1,0)
titanic3$parch9 <- ifelse(titanic3$parch==9,1,0)
# embarked dummy
titanic3$Cherbourg <- ifelse(titanic3$embarked == "Cherbourg",1,0)
titanic3$Queenstown <- ifelse(titanic3$embarked == "Queenstown",1,0)
titanic3$Southampton <- ifelse(titanic3$embarked == "Southampton",1,0)
# age dummy
titanic3$children <- ifelse(titanic3$age<=11, 1, 0)
titanic3$teenage <- ifelse((titanic3$age>11 & titanic3$age<20), 1, 0)
titanic3$young <- ifelse((titanic3$age>20 & titanic3$age<30), 1, 0)
titanic3$adult <- ifelse((titanic3$age>30 & titanic3$age<60), 1, 0)
titanic3$old <- ifelse(titanic3$age>60, 1, 0)
# nfamily dummy
titanic3$nfamily1 <- ifelse(titanic3$nfamily == 1,1,0)
titanic3$nfamily2 <- ifelse(titanic3$nfamily == 2,1,0)
titanic3$nfamily3 <- ifelse(titanic3$nfamily == 3,1,0)
titanic3$nfamily4 <- ifelse(titanic3$nfamily == 4,1,0)
titanic3$nfamily5 <- ifelse(titanic3$nfamily == 5,1,0)
titanic3$nfamily6 <- ifelse(titanic3$nfamily == 6,1,0)
titanic3$nfamily7 <- ifelse(titanic3$nfamily == 7,1,0)
titanic3$nfamily8 <- ifelse(titanic3$nfamily == 8,1,0)
titanic3$nfamily11 <- ifelse(titanic3$nfamily == 11,1,0)
View(titanic3)
titanic3$nfamily5 <- ifelse(titanic3$nfamily == 5,1,0)
titanic3$nfamily6 <- ifelse(titanic3$nfamily == 6,1,0)
titanic3$nfamily7 <- ifelse(titanic3$nfamily == 7,1,0)
titanic3$nfamily8 <- ifelse(titanic3$nfamily == 8,1,0)
titanic3$nfamily11 <- ifelse(titanic3$nfamily == 11,1,0)
#####
# Drop columns
titanic3$pclass <- NULL
titanic3$name <- NULL
titanic3$sex <- NULL
titanic3$age <- NULL
titanic3$sibsp <- NULL
titanic3$parch <- NULL
titanic3$cabin <- NULL
titanic3$boat <- NULL
titanic3$body <- NULL
titanic3$home.dest <- NULL
titanic3$lastname <- NULL
titanic3$title <- NULL
titanic3$nfamily <- NULL
View(titanic3)
titanic3$ticket <- NULL
View(titanic3)
titanic3$embarked <- NULL
View(titanic3)
lm(age~survived, data = titanic3)
#####
# Load file
load("titanic3.RData")
lm(age~survived, data = titanic3)
l<-lm(age~survived, data = titanic3)
summary(l)
#####
# Creating dummy variables for "pclass", "sex", "sibsp", "parch", "embarked", "age"
# and, "nfamily"
# using the base R
# pclass dummy
titanic3$pclass1st <- ifelse(titanic3$pclass=="1st",1,0)
titanic3$pclass2nd <- ifelse(titanic3$pclass=="2nd",1,0)
titanic3$pclass3rd <- ifelse(titanic3$pclass=="3rd",1,0)
# sex dummy
titanic3$female <- ifelse(titanic3$sex=="female",1,0)
titanic3$male <- ifelse(titanic3$sex=="male",1,0)
# sibsp dummy
titanic3$sibsp0 <- ifelse(titanic3$sibsp==0,1,0)
titanic3$sibsp1 <- ifelse(titanic3$sibsp==1,1,0)
titanic3$sibsp2 <- ifelse(titanic3$sibsp==2,1,0)
titanic3$sibsp3 <- ifelse(titanic3$sibsp==3,1,0)
titanic3$sibsp4 <- ifelse(titanic3$sibsp==4,1,0)
titanic3$sibsp5 <- ifelse(titanic3$sibsp==5,1,0)
titanic3$sibsp8 <- ifelse(titanic3$sibsp==8,1,0)
# parch dummy
titanic3$parch0 <- ifelse(titanic3$parch==0,1,0)
titanic3$parch1 <- ifelse(titanic3$parch==1,1,0)
titanic3$parch2 <- ifelse(titanic3$parch==2,1,0)
titanic3$parch3 <- ifelse(titanic3$parch==3,1,0)
titanic3$parch4 <- ifelse(titanic3$parch==4,1,0)
titanic3$parch5 <- ifelse(titanic3$parch==5,1,0)
titanic3$parch6 <- ifelse(titanic3$parch==6,1,0)
titanic3$parch9 <- ifelse(titanic3$parch==9,1,0)
# embarked dummy
titanic3$Cherbourg <- ifelse(titanic3$embarked == "Cherbourg",1,0)
titanic3$Queenstown <- ifelse(titanic3$embarked == "Queenstown",1,0)
titanic3$Southampton <- ifelse(titanic3$embarked == "Southampton",1,0)
# age dummy
titanic3$children <- ifelse(titanic3$age<=11, 1, 0)
titanic3$teenage <- ifelse((titanic3$age>11 & titanic3$age<20), 1, 0)
titanic3$young <- ifelse((titanic3$age>20 & titanic3$age<30), 1, 0)
titanic3$adult <- ifelse((titanic3$age>30 & titanic3$age<60), 1, 0)
titanic3$old <- ifelse(titanic3$age>60, 1, 0)
# nfamily dummy
titanic3$nfamily1 <- ifelse(titanic3$nfamily == 1,1,0)
titanic3$nfamily2 <- ifelse(titanic3$nfamily == 2,1,0)
titanic3$nfamily3 <- ifelse(titanic3$nfamily == 3,1,0)
titanic3$nfamily4 <- ifelse(titanic3$nfamily == 4,1,0)
titanic3$nfamily5 <- ifelse(titanic3$nfamily == 5,1,0)
titanic3$nfamily6 <- ifelse(titanic3$nfamily == 6,1,0)
titanic3$nfamily7 <- ifelse(titanic3$nfamily == 7,1,0)
titanic3$nfamily8 <- ifelse(titanic3$nfamily == 8,1,0)
titanic3$nfamily11 <- ifelse(titanic3$nfamily == 11,1,0)
#####
# Drop columns
titanic3$pclass <- NULL
titanic3$name <- NULL
titanic3$sex <- NULL
#titanic3$age <- NULL
titanic3$ticket <- NULL
titanic3$embarked <- NULL
titanic3$sibsp <- NULL
titanic3$parch <- NULL
titanic3$cabin <- NULL
titanic3$boat <- NULL
titanic3$body <- NULL
titanic3$home.dest <- NULL
titanic3$lastname <- NULL
titanic3$title <- NULL
titanic3$nfamily <- NULL
library("boot")
aleatorio <- rnorm(100,
mean = 10,
sd = 1)
f <- function(x,i){
xx<-x[i]
return(mean(xx, na.rm=TRUE))
}
b <- boot(aleatorio, f, R=R)
R <- 1000 # use 10000 if need
b <- boot(aleatorio, f, R=R)
b
b$t
b$t0
mean(aleatorio)
mean(b$t)
library("boot")
vignette("boot")
f <- function(x,i){
xx<-x[i]
return(mean(xx, na.rm=TRUE))
}
R <- 100
aleatorio <- rnorm(100,
mean = 10,
sd = 1)
aleatorio
b <- boot(aleatorio, f, R=R)
View(b)
b
b$t
mean(b$t)
mean(aleatorio)
plot(b)
